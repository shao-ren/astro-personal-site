---
export type Props = {
    to: string;
    title: string;
    gradientFrom: string;
    gradientTo: string;
};

// Get component props from Astro.props
const { title, to, gradientFrom, gradientTo } = Astro.props;
---

<a href={to} class="card">
    <div class="card__inner">
        <div class="card__title">{title}</div>
        <!-- Render the arrow via HTML entity name: â†’ = &rarr;-->
        <div class="card__footer">&rarr;</div>
    </div>
</a>

<style define:vars={{ gradientFrom, gradientTo }}>
    .card {
        /** local CSS variable reused below */
        --radius: 10px;

        background-image: linear-gradient(
            to right,
            var(--gradientFrom),
            var(--gradientTo)
        );

        padding: 4px;
        border-radius: var(--radius);
        text-decoration: none;
        transition: all 0.2s ease-in-out;
    }

    .card:hover {
        transform: scale(0.95);
    }

    .card__inner {
        background: var(--background);
        padding: 1.5rem;
        border-radius: var(--radius);
        display: flex;
        flex-direction: column;
    }

    .card__title {
        font-size: 1.2rem;
        color: var(--grey-900);
        font-weight: 500;
        line-height: 1.75rem;
    }

    .card__footer {
        padding-top: 2rem;
        font-size: 1.2rem;
        color: var(--grey-900);
        margin: auto 0 0 auto;
    }
</style>

<script>
    const card = document.querySelector(".card");

    // narrow the type of card to HTMLElement to access ".dataset"
    if (card instanceof HTMLElement) {
        // access data in dataset.gradientfrom
        console.log(card.dataset.gradientfrom);
    }
</script>
